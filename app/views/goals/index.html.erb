<h3>Latest Activities</h3>
<ul class="tableview">
<% collection.recent.each do |goal| %>
  <li>
    <%= goal.location %>
    <%= goal.date.strftime("%m/%y") %>
    <%= link_to user_fb_picture(goal.user, 'square', :class => 'avatar'), goal.user %>
    <%= link_to goal.title, goal_path(goal) %>
  </li>
<% end %>
</ul>

<article>
  <span id="status">loading...</span>
</article>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>

<script>
function success(position) {
  var s = document.querySelector('#status');

  if (s.className == 'success') {
    // not sure why we're hitting this twice in FF, I think it's to do with a cached result coming back
    return;
  }

  //s.innerHTML = "found you!";
  s.className = 'success';

  var mapcanvas = document.createElement('div');
  mapcanvas.id = 'mapcanvas';
  mapcanvas.style.height = '365px';
  mapcanvas.style.width = '320px';

  document.querySelector('article').appendChild(mapcanvas);

  var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
  var myOptions = {
    zoom: 10,
    center: latlng,
    mapTypeControl: false,
    navigationControlOptions: {style: google.maps.NavigationControlStyle.SMALL},
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  var map = new google.maps.Map(document.getElementById("mapcanvas"), myOptions);

  var marker = new google.maps.Marker({
      position: latlng,
      map: map,
      title:"You are here!"
  });

  <% @goal.each do |entry| %>
  <% next if entry.data[:latitude].blank? || entry.data[:latitude] == "0" || entry.data[:longitude].blank? || entry.data[:longitude] == "0" %>
  var latlng = new google.maps.LatLng(<%= entry.data[:latitude] %>, <%= entry.data[:longitude] %>);
  var marker = new google.maps.Marker({
      position: latlng,
      map: map,
      title: "<%= @goal.title %>"
  });
  <% end %>
}

function error(msg) {
  var s = document.querySelector('#status');
  s.innerHTML = typeof msg == 'string' ? msg : "failed";
  s.className = 'fail';

  // console.log(arguments);
}

if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(success, error);
} else {
  error('not supported');
}

</script>

