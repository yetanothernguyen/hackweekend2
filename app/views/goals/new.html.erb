<%= render :partial => "landing" %>
<div class="newgoal padded">
  <%= form_for resource do |form| %>
    <p>
      <%= form.text_area :title, :placeholder => "What do you want to do?" %>
    </p>
    <p>
      <%= form.text_field :location, :placeholder => "Where?", :id => 'location-text' %>
    </p>
    <p>
      <%= form.text_field :date, :placeholder => "When" %>
    </p>
      <%= form.submit "Do it", :class => "btn" %>
    </p>
  <% end %>
  <div class="location">
  	<div class="locationwrap">
  	<span class="current">@ Petaling Jaya</span>
	<div class="droplocation hide">
		<select>
		  <option value="volvo">Volvo</option>
		  <option value="saab">Saab</option>
		  <option value="mercedes">Mercedes</option>
		  <option value="audi">Audi</option>
		</select>
	</div>
	</div>
	<a href="#" id="showdropdown">Change</a>
  </div>
</div>

<div class="seegoal padded bordered">
  <a href="#" class="btn black arrow"> <em></em> Activities near you</a>
</div>

<div class="login padded bordered">
  <a href="#" class="">Already have an account?</a>
</div>

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script> 
<script type="text/javascript"> 
  $(document).ready(function() {
    initialize();

    var current_city = getCurrentCity();
  });

  var geocoder;

  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(successFunction, errorFunction);
  } 
  //Get latitude and longitude;
  function successFunction(position) {
      var lat = position.coords.latitude;
      var lng = position.coords.longitude;
      codeLatLng(lat, lng);
  }

  function errorFunction(message) {
    
  }

  function initialize() {
    geocoder = new google.maps.Geocoder();
  }

  function codeLatLng(lat, lng) {
    var latlng = new google.maps.LatLng(lat, lng);
    geocoder.geocode({'latLng': latlng}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
      console.log(results)
        if (results[1]) {
         //formatted address
         //alert(results[0].formatted_address)
        //find country name
             for (var i=0; i<results[0].address_components.length; i++) {
            for (var b=0;b<results[0].address_components[i].types.length;b++) {

            //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                if (results[0].address_components[i].types[b] == "locality") {
                    //this is the object you are looking for
                    city= results[0].address_components[i];
                    break;
                }
            }
        }
        //city data
        $("#location-text").val(city.short_name);

        } else {
          console.log("No results found");
          return "";
        }
      } else {
        console.log("Geocoder failed due to: " + status);
        return "";
      }
    });
  }
</script> 